<!--%canvas:pagelight.htm%-->
<!--%title:PD4ML Reference Manual - HTML-to-PDF converter for Java and .NET%-->
<!--%keywords:java, create pdf from php, create pdf, html pdf, html to pdf, html to pdf java, java create pdf, php generate pdf, php pdf generator, php pdf generation%-->
<!--%description:PD4ML reference. PD4ML is a Java library, which allows to create PDF documents from Java/JSP applications using HTML as template language%-->

<link rel="stylesheet" type="text/css" href="../i/docs.css">
<link rel="stylesheet" type="text/css" href="../main.css">

<link type="text/css" rel="stylesheet" href="../i/SyntaxHighlighter/Styles/SyntaxHighlighter.css"></link>
 
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shCore.js"></script>
 
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushCSharp.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushCss.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushJava.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushJScript.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushPhp.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushPython.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushRuby.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushSql.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushVb.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushXml.js"></script>
 
 
<script language="javascript"> 
function dpOnLoad() {
	dp.SyntaxHighlighter.ClipboardSwf = '../i/SyntaxHighlighter/Scripts/clipboard.swf';
	dp.SyntaxHighlighter.HighlightAll('code');
}
</script>

</head>

<body onload="dpOnLoad()">

 


<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td valign="top" class="content" width="99%">
<a href="/cookbook/"><< <b>back</b></a><b> </b>

<h3>PD4ML: Launching of PDF Viewer</h3>
Very often in desktop application scenarios you need to open just-generated 
document in a PDF viewer application.<p>The classic appraoch - works with any 
JDK:</p>

<pre name="code" class="Java">
String params = "C:\\Program Files\\Adobe\\Reader 9.0\\Reader\\AcroRD32.exe " + pdfFileName;
Runtime.getRuntime().exec(params);
</pre>

Exact version number of <b>"C:\\Program Files\\Adobe\\Reader 9.0\\Reader\\AcroRD32.exe"</b> 
can be determined by <b>Adobe</b> folder scan during the application startup.

<p>A necessity to know the exact path to the Acroread binary appears as a 
disadvantage of the method, but it also has some benefits: it allows you to pass 
additional command line parameters with the document.
<a href="http://pd4ml.com/i/PDFOpenParameters.pdf">Here</a> you may see what the 
parameters are for. </p>

<p>On MacOS let the web browser determine which application is to run to show a particular document:
</p>

<pre name="code" class="Java">
String params = "open /Applications/Safari.app " + resultPdf.getAbsolutePath();
Runtime.getRuntime().exec(params);
</pre>

If you use SWT, probably the best approach is as follows:

<pre name="code" class="Java">
org.eclipse.swt.program.Program.launch("file:" + resultPdf.getAbsolutePath());	
</pre>

Also should work on Win32:

<pre name="code" class="Java">
Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + resultPdf.getAbsolutePath() );			
</pre>

Java 6 simplifies the task on all platforms:

<pre name="code" class="Java">
if (Desktop.isDesktopSupported()) {
	Desktop.getDesktop().open(resultPdf);
} else {
	System.out.println("Awt Desktop is not supported!");
}
</pre>

The complete code looks like that:


<pre name="code" class="Java">
package samples;

import java.awt.Desktop;
import java.awt.Insets;
import java.awt.Rectangle;
import java.io.File;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.security.InvalidParameterException;

import org.zefer.pd4ml.PD4Constants;
import org.zefer.pd4ml.PD4ML;
import org.zefer.pd4ml.PD4PageMark;

public class PdfViewerStarter {
	protected int topValue = 10;
	protected int leftValue = 20;
	protected int rightValue = 10;
	protected int bottomValue = 10;
	protected int userSpaceWidth = 1300;

	public static void main(String[] args) {
		try {
			PdfViewerStarter jt = new PdfViewerStarter();
			jt.doConversion("http://pd4ml.com/sample.htm", "c:/pd4ml.pdf");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void doConversion( String url, String outputPath ) 
					throws InvalidParameterException, MalformedURLException, IOException {
			File output = new File(outputPath);
			java.io.FileOutputStream fos = new java.io.FileOutputStream(output);

			PD4ML pd4ml = new PD4ML();
			pd4ml.setHtmlWidth(userSpaceWidth);
			pd4ml.setPageSize(pd4ml.changePageOrientation(PD4Constants.A4));
			pd4ml.setPageInsetsMM(new Insets(topValue, leftValue, bottomValue, rightValue));
			pd4ml.useTTF("c:/windows/fonts", true);

			pd4ml.render(new URL(url), fos);
			fos.close();

			if (Desktop.isDesktopSupported()) {
				Desktop.getDesktop().open(output);
			} else {
				System.out.println("Awt Desktop is not supported!");
			}			
			
			System.out.println( outputPath + "\ndone." );
	}
}
</pre>

</td></tr></table>