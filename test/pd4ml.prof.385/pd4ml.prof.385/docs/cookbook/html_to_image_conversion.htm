<!--%canvas:pagelight.htm%-->
<!--%title:PD4ML Cookbook - HTML-to-Image convertersion%-->
<!--%keywords:java, create pdf from php, create pdf, html pdf, html to pdf, html to pdf java, java create pdf, php generate pdf, php pdf generator, php pdf generation%-->
<!--%description:PD4ML reference. PD4ML is a Java library, which allows to create PDF documents from Java/JSP applications using HTML as template language%-->

<link rel="stylesheet" type="text/css" href="../i/docs.css">
<link rel="stylesheet" type="text/css" href="../main.css">

<link type="text/css" rel="stylesheet" href="../i/SyntaxHighlighter/Styles/SyntaxHighlighter.css"></link>
 
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shCore.js"></script>
 
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushCSharp.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushCss.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushJava.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushJScript.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushPhp.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushPython.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushRuby.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushSql.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushVb.js"></script>
<script language="javascript" src="../i/SyntaxHighlighter/Scripts/shBrushXml.js"></script>
 
 
<script language="javascript"> 
function dpOnLoad() {
	dp.SyntaxHighlighter.ClipboardSwf = '../i/SyntaxHighlighter/Scripts/clipboard.swf';
	dp.SyntaxHighlighter.HighlightAll('code');
}
</script>

</head>

<body onload="dpOnLoad()">

 


<table width="100%" border="0" cellpadding="0" cellspacing="0">
<tr>
<td valign="top" class="content" width="99%">
<a href="/cookbook/"><< <b>back</b></a><b> </b>

<h3>PD4ML: HTML to a raster image conversion</h3>
PD4ML (as HTML-to-PDF converter) consists of 2 relatively separate modules: HTML 
rendering engine and PDF output pseudo-device, derived from <b>java.awt.Graphics</b>. 
That makes an output of a rendered HTML document to an image (or to any other 
Graphics device) quite a trivial task.<p>In order to make the task even easier, 
we added a image output mode to PD4ML API. With a simple output format switch 
you may produce a PNG or a multipage TIFF</p>
<p>

<pre name="code" class="Java">
pd4ml.outputFormat(PD4Constants.PNG8);
// or 
pd4ml.outputFormat(PD4Constants.PNG24);
// or 
pd4ml.outputFormat(PD4Constants.TIFF);
</pre>

The equivalents in JSP taglib:

<pre name="code" class="Xml">&lt;pd4ml:transform ... outputFormat=&quot;png8&quot;&gt; ... &lt;/pd4ml:transform&gt;

&lt;pd4ml:transform ... outputFormat=&quot;png24&quot;&gt; ... &lt;/pd4ml:transform&gt;

&lt;pd4ml:transform ... outputFormat=&quot;tiff&quot;&gt; ... &lt;/pd4ml:transform&gt;</pre>

(in the case the transform tag automatically sets corresponding <b>Content-type</b> 
HTTP header &quot;<b>image/png</b>&quot; or &quot;<b>image/tiff</b>&quot;)<p>In the command line tool: 

</p>

<pre name="code" class="Java">
java -Xmx512m -Djava.awt.headless=true -cp ./pd4ml.jar Pd4Cmd &lt;URL&gt; 1200 -out thumbnail.png -outformat png8

java -Xmx512m -Djava.awt.headless=true -cp ./pd4ml.jar Pd4Cmd &lt;URL&gt; 1200 -out thumbnail.png -outformat png24

java -Xmx512m -Djava.awt.headless=true -cp ./pd4ml.jar Pd4Cmd &lt;URL&gt; 1200 -out thumbnail.tiff -outformat tiff
</pre>

By PNG image output PD4ML ignores page breaks, but it respects them by multipage 
TIFF generation.<p>There are some other limitations in the HTML-to-Image 
conversion mode.</p>
<ul>
	<li>No headers/footers supported</li>
	<li>No footnotes</li>
	<li>No hyperlinks (of course)</li>
	<li>Generated TOC has no page numbering</li>
	<li>No page insets applied (however document body margins are there)</li>
	<li>etc</li>
</ul>
<p>Also, for a case, you need further image data processing, PD4ML API 
introduces a couple of specialized <b>renderAsImages()</b> methods, which return 
an array of <b>BufferedImage</b> objects, represent document pages.</p>
<p>The biggest source of troubles by image output is memory allocation. Even a 
relatively small HTML layout 1000x5000px requires to allocate at least 20 MB for 
image bytes output (plus BufferedImage class infrastructure overhead).</p>
</td></tr></table>